name: Authing UI Components Github CI

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Please enter your github name'
        required: true
      email:
        description: 'Please enter your github email'
        required: true
      version:
        description: 'Please enter your release version'
        required: true
        
jobs:

  readyGo:

    runs-on: ubuntu-latest

    env: 
      PUBLISH_OPTS: ${{ github.ref_name == 'master' && '--verbose' || '--verbose --tag=alpha' }}
      ALIYUN_ACCESS_KEY: ${{ secrets.ALIYUN_ACCESS_KEY }}
      ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
      OSS_REGION_PROD: ${{ secrets.OSS_REGION_PROD }}
      CDN_OSS_PROD: ${{ secrets.CDN_OSS_PROD }}
      
    
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
          
      - name: install global package
        run: |
          npm install yarn -g
          npm install lerna -g
      
      - name: build lib
        run: |
          yarn
          npm run build:lib
          
      - name: lerna version
        run: |
          lerna version $VERSION --yes
        env:
          VERESION: ${{ github.event.inputs.version }}
          
      - name: publish lib
        if: ${{ github.ref_name == 'master' }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          npm run publish:lib
          echo "publish:lib successfully ðŸš€"
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          
      - name: publish-rc
        if: ${{ github.ref_name != 'master' }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          npm run publish:rc
          echo "publish:rc successfully ðŸš€"
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      
      - name: setup-oss
        if: ${{ github.ref_name == 'master' }}
        uses: yizhoumo/setup-ossutil@v1
        with: 
          ossutil-version: '1.7.0' # Optional, default to '1.7.0'
          endpoint: ${{ secrets.OSS_REGION_PROD }}
          access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY }}
          access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          
      - name: upload-oss
        if: ${{ github.ref_name == 'master' }}
        run: |
          echo "ä¸Šä¼ æ‰“åŒ…åˆ° CDN"
          echo "VERSION: $VERSION"
          ossutil cp -f -r packages/angular-components/dist/ng-ui-components/bundles oss://$CDN_OSS_PROD/packages/ng-ui-components/$VERESION/
          ossutil cp -f -r packages/native-js/lib oss://$CDN_OSS_PROD/native-js-ui-components/$VERESION/
          ossutil cp -f -r packages/react-components/lib oss://$CDN_OSS_PROD/packages/react-ui-components/$VERESION/
          ossutil cp -f -r packages/vue-components/lib oss://$CDN_OSS_PROD/packages/vue-ui-components/$VERESION/
        env:
          VERESION: ${{ github.event.inputs.version }}
          
      - name: set-git-config
        if: ${{ github.ref_name == 'master' }}
        run: |
          git config --global user.email ${{ github.event.inputs.email }}
          git config --global user.name ${{ github.event.inputs.name }}
    
      - name: release
        if: ${{ github.ref_name == 'master' }}
        uses: actions/github-script@v3
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.VERESION }}",
              sha: context.sha
            })
        env:
          VERESION: ${{ github.event.inputs.version }}
