image: node:12.14.0

stages:
  - build
  - upload:demo
  - upload
  - sonarqube-check

before_script:
  - mkdir -p ~/.ssh
  - touch ~/.ssh/id_rsa
  - touch ~/.ssh/config
  - chmod 700 ~/.ssh/id_rsa
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - echo "$SSH_CONFIG" > ~/.ssh/config

build:lib:
  stage: build
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master" && $CI_COMMIT_TAG =~ "/^$/"'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG =~ "/^$/"'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "feat/guard"'
      when: on_success
  cache:
    untracked: true
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - packages/angular-components/dist/ng-ui-components/bundles
      - packages/native-js/lib
      - packages/react-components/lib
      - packages/vue-components/lib
  script:
    - yarn
    - yarn run build:lib
  artifacts:
    untracked: false
    paths:
      - packages/angular-components/dist/ng-ui-components/bundles
      - packages/native-js/lib
      - packages/react-components/lib
      - packages/vue-components/lib
    expire_in: 30 days

upload:demo:
  stage: upload:demo
  rules:
    - if: '$CI_COMMIT_REF_NAME == "feat/guard"'
      when: on_success
  image:
    name: fuergaosi/ossutil:latest
  dependencies:
    - build:lib
  script:
    - echo build 并上传 demo
    - ossutil --access-key-id ${ALIYUN_ACCESS_KEY}
      --access-key-secret ${ALIYUN_ACCESS_KEY_SECRET}
      -e ${OSS_REGION_PROD} cp -r -f packages/native-js/lib oss://${CDN_OSS_DAILY}/guard/demo/

upload:oss:
  stage: upload
  # when: manual
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  image:
    name: fuergaosi/ossutil:latest
  script:
    - export VERSION=$(cat lerna.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
    - echo 上传包到 cdn
    - echo $CDN_OSS_PROD
    - echo $OSS_REGION_PROD
    - echo 版本 $VERSION
    - >
      ossutil --access-key-id ${ALIYUN_ACCESS_KEY}
      --access-key-secret ${ALIYUN_ACCESS_KEY_SECRET}
      -e ${OSS_REGION_PROD} cp -r -f packages/angular-components/dist/ng-ui-components/bundles oss://${CDN_OSS_PROD}/packages/ng-ui-components/${VERSION}/

    - >
      ossutil --access-key-id ${ALIYUN_ACCESS_KEY}
      --access-key-secret ${ALIYUN_ACCESS_KEY_SECRET}
      -e ${OSS_REGION_PROD} cp -r -f packages/native-js/lib oss://${CDN_OSS_PROD}/packages/native-js-ui-components/${VERSION}/

    - >
      ossutil --access-key-id ${ALIYUN_ACCESS_KEY}
      --access-key-secret ${ALIYUN_ACCESS_KEY_SECRET}
      -e ${OSS_REGION_PROD} cp -r -f packages/react-components/lib oss://${CDN_OSS_PROD}/packages/react-ui-components/${VERSION}/

    - >
      ossutil --access-key-id ${ALIYUN_ACCESS_KEY}
      --access-key-secret ${ALIYUN_ACCESS_KEY_SECRET}
      -e ${OSS_REGION_PROD} cp -r -f packages/vue-components/lib oss://${CDN_OSS_PROD}/packages/vue-ui-components/${VERSION}/
  dependencies:
    - build:lib

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - develop # or the name of your main branch
